import org.springframework.boot.gradle.tasks.bundling.BootBuildImage

plugins {
    id 'module-config'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "org.springframework.boot"
    id "org.sonarqube" version "5.0.0.4638"
    id 'groovy-gradle-plugin'
}

repositories {
    mavenCentral()
}

sonar {
    properties {
        property "sonar.projectKey", "kdg-ti_integration-5_2024-2025_team5_bandit-backend_AZQpILkIZyiWy1HzUDWI"
        property "sonar.qualitygate.wait", true
    }
}

dependencies {
    implementation project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.testcontainers:junit-jupiter:1.20.2'
    testImplementation 'org.testcontainers:postgresql:1.20.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Spring cloud AZURE
    implementation 'com.azure.spring:spring-cloud-azure-starter-actuator:4.3.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault:4.3.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter:4.3.0'
    implementation 'com.azure.spring:spring-cloud-azure-dependencies:5.7.0'
}


gitProperties {
    extProperty = 'gitProps'
}
generateGitProperties.outputs.upToDateWhen { false }

tasks.register('printGitProperties') {
    dependsOn 'generateGitProperties'
    doLast {
        println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
    }
}


bootBuildImage {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    imageName = "acrbanditgamesdev.azurecr.io/gameplay-context"
    tags = ["acrbanditgamesdev.azurecr.io/gameplay-context:${-> project.ext.gitProps['git.commit.id.abbrev']}"]
    publish = true
    docker {
        publishRegistry {
            username =  System.getenv("REGISTRY_USERNAME")
            password = System.getenv("REGISTRY_PASSWORD")
        }
    }
    archiveFile = tasks.bootJar.archiveFile
}

bootBuildImage.dependsOn generateGitProperties


tasks.register('bootBuildImageProd', BootBuildImage) {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    imageName = "acrbanditgamesprod.azurecr.io/gameplay-context"
    tags = ["acrbanditgamesprod.azurecr.io/gameplay-context:${-> project.ext.gitProps['git.commit.id.abbrev']}"]
    publish = true
    docker {
        publishRegistry {
            username =  System.getenv("PROD_REGISTRY_USERNAME")
            password = System.getenv("PROD_REGISTRY_PASSWORD")
        }
    }
    archiveFile = tasks.bootJar.archiveFile
}

bootBuildImageProd.dependsOn generateGitProperties


