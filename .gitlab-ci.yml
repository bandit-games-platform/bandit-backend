default:
  interruptible: true
  image: eclipse-temurin:21-jdk-alpine

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: $CI_COMMIT_TAG

stages:
  - build
  - test
  - deploy
  - destroy


# ----------------------- BUILD ---------------------------------- #

build_chatbot:
  stage: build
  script:
    - echo "Building chatbot project"
    - chmod +x gradlew
    - cd ./chatbot
    - ../gradlew bootJar
    - cd ..
  artifacts:
    name: "build-chatbot-artifact"
    when: on_success
    expire_in: 2 days
    paths:
      - "chatbot/build/libs/*.jar"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd'


build_gameplay:
  stage: build
  script:
    - echo "Building gameplay project"
    - chmod +x gradlew
    - cd ./gameplay
    - ../gradlew bootJar
    - cd ..
  artifacts:
    name: "build-gameplay-artifact"
    when: on_success
    expire_in: 2 days
    paths:
      - "gameplay/build/libs/*.jar"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd'


build_game_registry:
  stage: build
  script:
    - echo "Building game registry project"
    - chmod +x gradlew
    - cd ./gameRegistry
    - ../gradlew bootJar
    - cd ..
  artifacts:
    name: "build-game-registry-artifact"
    when: on_success
    expire_in: 2 days
    paths:
      - "gameRegistry/build/libs/*.jar"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd'


build_player:
  stage: build
  script:
    - echo "Building player project"
    - chmod +x gradlew
    - cd ./player
    - ../gradlew bootJar
    - cd ..
  artifacts:
    name: "build-player-artifact"
    when: on_success
    expire_in: 2 days
    paths:
      - "player/build/libs/*.jar"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd'


build_statistics:
  stage: build
  script:
    - echo "Building statistics project"
    - chmod +x gradlew
    - cd ./statistics
    - ../gradlew clean bootBuildImage --stacktrace
    - cd ..
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd'


build_storefront:
  stage: build
  script:
    - echo "Building storefront project"
    - chmod +x gradlew
    - cd ./storefront
    - ../gradlew bootJar
    - cd ..
  artifacts:
    name: "build-storefront-artifact"
    when: on_success
    expire_in: 2 days
    paths:
      - "storefront/build/libs/*.jar"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd'

# ----------------------- TEST ---------------------------------- #

test_chatbot:
  stage: test
  needs: []
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind

  before_script:
    - apk add --no-cache docker

  script:
    - echo "Running chatbot tests"
    - chmod +x gradlew
    - cd ./chatbot
    - ../gradlew test
    - cd ..

  artifacts:
    when: always
    reports:
      junit: "chatbot/build/test-results/test/**/TEST-*.xml"


test_gameplay:
  stage: test
  needs: []
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind

  before_script:
    - apk add --no-cache docker

  script:
    - echo "Running gameplay tests"
    - chmod +x gradlew
    - cd ./gameplay
    - ../gradlew test
    - cd ..

  artifacts:
    when: always
    reports:
      junit: "gameplay/build/test-results/test/**/TEST-*.xml"


test_game_registry:
  stage: test
  needs: []
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind

  before_script:
    - apk add --no-cache docker

  script:
    - echo "Running game registry tests"
    - chmod +x gradlew
    - cd ./gameRegistry
    - ../gradlew test
    - cd ..

  artifacts:
    when: always
    reports:
      junit: "gameRegistry/build/test-results/test/**/TEST-*.xml"


test_player:
  stage: test
  needs: []
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind

  before_script:
    - apk add --no-cache docker

  script:
    - echo "Running player tests"
    - chmod +x gradlew
    - cd ./player
    - ../gradlew test
    - cd ..

  artifacts:
    when: always
    reports:
      junit: "player/build/test-results/test/**/TEST-*.xml"


test_statistics:
  stage: test
  needs: []
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind

  before_script:
    - apk add --no-cache docker

  script:
    - echo "Running statistics tests"
    - chmod +x gradlew
    - cd ./statistics
    - ../gradlew test
    - cd ..

  artifacts:
    when: always
    reports:
      junit: "statistics/build/test-results/test/**/TEST-*.xml"


test_storefront:
  stage: test
  needs: []
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind

  before_script:
    - apk add --no-cache docker

  script:
    - echo "Running storefront tests"
    - chmod +x gradlew
    - cd ./storefront
    - ../gradlew test
    - cd ..

  artifacts:
    when: always
    reports:
      junit: "storefront/build/test-results/test/**/TEST-*.xml"


# ----------------------- SAST ---------------------------------- #

sast:
  stage: test
  needs: []
  variables:
    SAST_EXCLUDED_PATHS: src/test
    SEARCH_MAX_DEPTH: '10'
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

semgrep-sast:
  rules:
    - if: $SAST_DISABLED == 'true' || $SAST_DISABLED == '1'
      when: never
    - if: $SAST_EXCLUDED_ANALYZERS =~ /semgrep/
      when: never
    - if: $CI_COMMIT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event"
      exists:
        - '**/*.java'

# ---------------------- DEPLOY --------------------------------- #
# ----------------- DEV ----------------- #

deploy_statistics_dev:
  image: mcr.microsoft.com/azure-cli
  stage: deploy
  when: on_success
  needs:
    - build_statistics
  before_script:
    - az login --service-principal -u $DEV_AZURE_APP_ID -p $DEV_AZURE_PASSWORD --tenant $DEV_AZURE_TENANT
    - az extension add --name containerapp --upgrade
  script:
    - tag=$CI_COMMIT_REF_NAME
    - REGISTRY_ID=$(az acr show --name $REGISTRY_USERNAME --query "id" -o tsv)
    - CONTAINER_NAME="statistics-dev-container"
    - RESOURCE_GROUP="rg_bandit_games_dev"
    #    - az containerapp env create --name dev-containers --resource-group rg_bandit_games_dev --location northeurope
    - az containerapp up --name statistics-dev-container --resource-group $RESOURCE_GROUP --location northeurope --environment dev-containers --image $REGISTRY_USERNAME.azurecr.io/statistics-context:${CI_COMMIT_SHORT_SHA::-1} --target-port 8095 --ingress external
#    - az containerapp up --name statistics-dev-container --resource-group $RESOURCE_GROUP --location northeurope --environment dev-containers --image alpine:latest --target-port 8095 --ingress external
    - PRINCIPAL_ID=$(az containerapp show --name $CONTAINER_NAME --resource-group $RESOURCE_GROUP --query "identity.principalId" -o tsv)

#    - az role assignment create --assignee-object-id $PRINCIPAL_ID --role "AcrPull" --scope $REGISTRY_ID

    - az containerapp update --name statistics-dev-container --resource-group rg_bandit_games_dev
      --cpu 1 --memory 2Gi
      --min-replicas 0 --max-replicas 1
      --set-env-vars
      ENV_VAR=someEnVar

  # This will only run when you commit to a merge request or to the ci-cd branch
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'ci-cd'

# ----------------- PROD ---------------- #

#deploy_statistics_prod:
#  stage: deploy
#  when: manual
#  needs:
#    - build_statistics
#  script:
#    -
#  # This will only be available if you perform a tag, or you commit to main
#  rules:
#    - if: $CI_COMMIT_TAG
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


# ---------------------- DESTROY -------------------------------- #
# ----------------- DEV ----------------- #

# ----------------- PROD ---------------- #

